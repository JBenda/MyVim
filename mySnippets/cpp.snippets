snippet date
${2:${1:`date +%d`}.`date +%m`}.`date +%Y`
endsnippet

snippet "name(space)?" "namespace" br
namespace $1 {
	$0
} // end namespace $1
endsnippet

snippet /@ "doxygen comment auto correction"
/**
 *	@brief ${1} `!p 
import re
if snip.v.text:
	v = re.sub("\\n", "", snip.v.text)
	pa = re.search("\\((.*)\\)", v)
	if pa:
		# arguments
		ls = re.findall("\w[^,]*", pa.group(1));
		res =list(map(lambda s: re.search("(\w+)\s*$", s).group(1), ls))
		for p in res:
			snip += " *\t@param " + p
	else:
		snip.rv += "failed to pares"`
 */`!p 
if snip.v.text:
	snip += re.sub("^\s*", "", snip.v.text)
`
endsnippet

snippet class "default class declaration" 
class $1 `!p if not snip.c and t[2]: snip.rv = ': public'` $2{
	$0
} ;
endsnippet

snippet /- "divider"
//--------------------------------------------------------------------------

endsnippet
